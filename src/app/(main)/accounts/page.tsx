'use client';

interface Account {
  id: string;
  name: string;
  type: string;
  balance: number;
  icon: string;
  isDebt?: boolean;
  isNegative?: boolean;
}

const accounts: Account[] = [
  {
    id: '1',
    name: '–û—Å–Ω–æ–≤–Ω–æ–π —Å—á—ë—Ç',
    type: '–û–±—ã—á–Ω—ã–π',
    balance: 10500,
    icon: 'üè†'
  },
  {
    id: '2',
    name: '–ö–∞—Ä—Ç–æ—á–Ω—ã–π —Å—á—ë—Ç',
    type: '–û–±—ã—á–Ω—ã–π',
    balance: 8200,
    icon: 'üí≥'
  },
  {
    id: '3',
    name: '–°–±–µ—Ä–µ–∂–µ–Ω–∏—è',
    type: '–ù–∞–∫–æ–ø–∏—Ç–µ–ª—å–Ω—ã–π',
    balance: 50000,
    icon: 'üí∞'
  },
  {
    id: '4',
    name: '–§–æ–Ω–¥ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π',
    type: '–ù–∞–∫–æ–ø–∏—Ç–µ–ª—å–Ω—ã–π —Å—á—ë—Ç',
    balance: 30000,
    icon: '‚úàÔ∏è'
  },
  {
    id: '5',
    name: '–ê–≤—Ç–æ–∫—Ä–µ–¥–∏—Ç',
    type: '–î–æ–ª–≥–æ–≤–æ–π; —è –¥–æ–ª–∂–µ–Ω',
    balance: -200000,
    icon: '‚ö†Ô∏è',
    isDebt: true,
    isNegative: true
  },
  {
    id: '6',
    name: '–ò–ø–æ—Ç–µ–∫–∞',
    type: '–î–æ–ª–≥–æ–≤–æ–π; —è –¥–æ–ª–∂–µ–Ω',
    balance: -1500000,
    icon: 'üò∞',
    isDebt: true,
    isNegative: true
  },
  {
    id: '7',
    name: '–ó–∞–π–º –î–æ–±—Ä–æ—Å–ª–∞–≤—É',
    type: '–î–æ–ª–≥–æ–≤–æ–π; –º–Ω–µ –¥–æ–ª–∂–Ω—ã',
    balance: 15000,
    icon: 'üíå',
    isDebt: true
  },
  {
    id: '8',
    name: '–ò–Ω–≤–µ—Å—Ç',
    type: '–î–æ–ª–≥–æ–≤–æ–π; –º–Ω–µ –¥–æ–ª–∂–Ω—ã',
    balance: 100000,
    icon: 'üíº',
    isDebt: true
  }
];

export default function AccountsPage() {
  const totalBalance = accounts.reduce((sum, account) => sum + account.balance, 0);

  return (
    <div className="max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8">
      <div className="flex justify-between items-center mb-6">
        <h1 className="text-2xl font-semibold text-gray-900">–°—á–µ—Ç–∞</h1>
        <div className="text-right">
          <div className="text-sm text-gray-500">–û–±—â–∞—è —Å—É–º–º–∞ –≤—Å–µ—Ö —Å—á—ë—Ç–æ–≤</div>
          <div className="text-2xl font-semibold text-red-500">
            {totalBalance.toLocaleString('ru-RU')} ‚ÇΩ
          </div>
        </div>
      </div>

      <div className="grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-4">
        {accounts.map((account) => (
          <div
            key={account.id}
            className="bg-white rounded-lg shadow-sm p-4 hover:shadow-md transition-shadow cursor-pointer"
          >
            <div className="flex items-start justify-between">
              <div>
                <div className="flex items-center gap-2">
                  <span className="text-xl">{account.icon}</span>
                  <h3 className="font-medium text-gray-900">{account.name}</h3>
                </div>
                <p className="text-sm text-gray-500 mt-1">{account.type}</p>
              </div>
            </div>
            <div className={`mt-2 text-lg font-semibold ${
              account.isNegative ? 'text-red-500' : 
              account.isDebt ? 'text-blue-500' : 
              'text-green-500'
            }`}>
              {account.isNegative ? '‚àí ' : ''}{Math.abs(account.balance).toLocaleString('ru-RU')} ‚ÇΩ
            </div>
          </div>
        ))}
      </div>
    </div>
  );
} 